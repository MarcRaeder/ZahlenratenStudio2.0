{"version":3,"sources":["ZahlenratenCustomForm/ZahlenratenCustomForm.tsx","ZahlenratenCustomForm/ZahlZuHochCustomForm.tsx","ZahlenratenCustomForm/ZahlZuNiedrigCustomForm.tsx","DialogRenderer/CustomFormsRenderer.tsx","ZahlenratenStartDialog/ZahlenratenStartdialog.tsx","DialogRenderer/StartDialogRenderer.tsx","App.tsx","index.tsx"],"names":["ZahlenratenCustomForm","props","userInput","React","createRef","className","this","userTask","tokens","payload","leftTries","lowestNumber","highestNumber","type","ref","onClick","_handleFormSubmit","bind","finishUserTask","input","current","value","tries","Component","ZahlZuHochCustomForm","guess","randomNumber","text","range","distance","Math","abs","showText","oldDistance","lastGuess","ZahlZuNiedrigCustomForm","CustomFormsRenderer","state","targetComponent","suspendState","components","customFormService","updateComponent","_identity","preferredControl","userTaskConfig","customForm","Error","JSON","stringify","component","setState","suspendUserTask","abortUserTask","terminateProcessInstance","result","CustomFormService","onUserTaskReceived","destroy","createElement","ZahlenratenStartDialog","userName","_handleOnClick","startProcess","StartDialogRenderer","startDialogService","displayStartDialog","config","identity","id","targetIdentity","targetStartDialogConfiguration","currentLanguage","StartDialogService","onStartDialogDisplayed","language","closeStartDialog","openStartDialog","startDialogId","startDialogConfiguration","processModelId","startEventId","withTranslation","App","style","height","displayName","name","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.180f52b7.chunk.js","sourcesContent":["import React from 'react';\n\nimport { CustomFormProps } from '../DialogRenderer';\n\nimport './ZahlenratenCustomForm.css';\n\nexport class ZahlenratenCustomForm extends React.Component<CustomFormProps> {\n\n  private userInput: React.RefObject<HTMLInputElement>;\n\n  constructor(props: CustomFormProps) {\n    super(props);\n    this.userInput = React.createRef();\n  }  \n\n  public render(): JSX.Element {\n    return (\n      <div className='test-class'>\n\n        <h1>Du hast noch {this.props.userTask.tokens[0].payload.leftTries} Versuche</h1>\n        <br />\n        <h2>Deine Zahl liegt zwischen {this.props.userTask.tokens[0].payload.lowestNumber} und {this.props.userTask.tokens[0].payload.highestNumber} </h2>\n        <label>Gib eine Zahl ein: </label>\n        <input type='number' ref={this.userInput} />\n        <button onClick={this._handleFormSubmit.bind(this)}>\n          Confirm\n        </button>\n      </div>\n    );\n  }\n\n  private _handleFormSubmit(): void {\n    this.props.finishUserTask({ input: this.userInput.current?.value, tries: this.props.userTask.tokens[0].payload.tries += 1, leftTries: this.props.userTask.tokens[0].payload.leftTries -= 1 });\n    \n  }\n}\n","import React from 'react';\n\nimport { CustomFormProps } from '../DialogRenderer';\n\nimport './ZahlenratenCustomForm.css';\n\nexport class ZahlZuHochCustomForm extends React.Component<CustomFormProps> {\n\n  private guess;\n  private randomNumber;\n  private text;\n  private range;\n  private tries;\n  private distance;\n  \n\n  constructor(props: CustomFormProps) {\n    super(props);\n    this.range = 10;\n    this.guess = this.props.userTask.tokens[0].payload.guess;\n    this.randomNumber = this.props.userTask.tokens[0].payload.randomNumber;\n    this.distance = Math.abs(this.randomNumber - this.guess);\n    this.tries = this.props.userTask.tokens[0].payload.tries;\n    this.text = this.showText();\n  }\n\n  showText() {\n    if (this.tries === 1) {\n      return this.distance < this.range ? 'Warm!' : 'Kalt!';\n    } else {\n      const oldDistance = Math.abs(this.randomNumber - this.props.userTask.tokens[0].payload.lastGuess);\n      return this.distance < oldDistance ? 'Wärmer' : 'Kälter';\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className='test-class'>\n        <h1>{this.text}</h1>\n        <br />\n        <h2>Deine Zahl war zu Hoch!  </h2>\n        <br />\n        <button onClick={this._handleFormSubmit.bind(this)}>\n          OK\n        </button>\n      </div>\n    );\n  }\n\n  private _handleFormSubmit(): void {\n    this.props.finishUserTask({ input: null });\n  }\n}\n","import React from 'react';\n\nimport { CustomFormProps } from '../DialogRenderer';\n\nimport './ZahlenratenCustomForm.css';\n\nexport class ZahlZuNiedrigCustomForm extends React.Component<CustomFormProps> {\n\n  private guess;\n  private randomNumber;\n  private text;\n  private range;\n  private tries;\n  private distance;\n  \n\n  constructor(props: CustomFormProps) {\n    super(props);\n    this.range = 10;\n    this.guess = this.props.userTask.tokens[0].payload.guess;\n    this.randomNumber = this.props.userTask.tokens[0].payload.randomNumber;\n    this.distance = Math.abs(this.randomNumber - this.guess);\n    this.tries = this.props.userTask.tokens[0].payload.tries;\n    this.text = this.showText();\n  }\n\n  showText() {\n    if (this.tries === 1) {\n      return this.distance < this.range ? 'Warm!' : 'Kalt!';\n    } else {\n      const oldDistance = Math.abs(this.randomNumber - this.props.userTask.tokens[0].payload.lastGuess);\n      return this.distance < oldDistance ? 'Wärmer' : 'Kälter';\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className='test-class'>\n        <h1>{this.text}</h1>\n        <br />\n        <h2>Deine Zahl war zu Niedrig!  </h2>\n        <br />\n        <button onClick={this._handleFormSubmit.bind(this)}>\n          OK\n        </button>\n      </div>\n    );\n  }\n\n  private _handleFormSubmit(): void {\n    this.props.finishUserTask({ input: null });\n  }\n}\n\n","import React from 'react';\n\nimport { DataModels, Identity } from '@atlas-engine/atlas_engine_client';\nimport { CustomFormService, FormState } from '@atlas-engine-contrib/atlas-ui_sdk';\n\nimport { Config } from '../config';\nimport { ZahlenratenCustomForm } from '../ZahlenratenCustomForm/ZahlenratenCustomForm';\nimport { ZahlZuHochCustomForm } from '../ZahlenratenCustomForm/ZahlZuHochCustomForm';\nimport { ZahlZuNiedrigCustomForm } from '../ZahlenratenCustomForm/ZahlZuNiedrigCustomForm';\n\n\nexport type CustomFormProps = {\n  userTask: DataModels.FlowNodeInstances.UserTaskInstance;\n  suspendState: FormState;\n  abortUserTask: () => void;\n  finishUserTask: (result: DataModels.FlowNodeInstances.UserTaskResult) => void;\n  suspendUserTask: (state: FormState) => void;\n  config: Config,\n}\n\nexport type CustomFormRendererProps = {\n  components?: CustomFormsComponentDict;\n  config?: Config;\n}\n\nexport type CustomFormsServiceState = {\n  targetComponent: React.ComponentClass<CustomFormProps> | React.FunctionComponent<CustomFormProps> | null;\n  userTask: DataModels.FlowNodeInstances.UserTaskInstance | null;\n  suspendState: FormState | null;\n}\n\nexport type CustomFormsComponentDict = {\n  [preferredControl: string]: React.ComponentClass<CustomFormProps> | React.FunctionComponent<CustomFormProps>;\n}\n\nexport class CustomFormsRenderer extends React.Component<CustomFormRendererProps, CustomFormsServiceState> {\n\n  public state: CustomFormsServiceState = {\n    targetComponent: null,\n    userTask: null,\n    suspendState: null,\n  };\n\n  private components: CustomFormsComponentDict = {\n    ZahlenratenCustomForm: ZahlenratenCustomForm,\n    ZahlZuHochCustomForm: ZahlZuHochCustomForm,\n    ZahlZuNiedrigCustomForm: ZahlZuNiedrigCustomForm,\n  };\n\n  private customFormService: CustomFormService | null = null;\n\n  public componentDidMount(): void {\n    this.customFormService = new CustomFormService();\n    this.customFormService.onUserTaskReceived(this.updateComponent);\n\n    this.components = {\n      ...this.components,\n      ...this.props.components,\n    };\n  }\n\n  public updateComponent = (\n    userTask: DataModels.FlowNodeInstances.UserTaskInstance,\n    _identity: Identity,\n    suspendState: FormState | null,\n  ): void => {\n\n    const preferredControl = userTask.userTaskConfig.customForm;\n    if (!preferredControl) {\n      throw new Error(`No preferredControl set in usertask: ${JSON.stringify(userTask)}`);\n    }\n\n    const component = this.components[preferredControl];\n    if (!component) {\n      throw new Error(`No component found for usertask ${JSON.stringify(userTask)}`);\n    }\n\n    this.setState({\n      targetComponent: component,\n      userTask: userTask,\n      suspendState: suspendState,\n    });\n  };\n\n  public componentWillUnmount(): void {\n    if (!this.customFormService) {\n      return;\n    }\n    this.customFormService.destroy();\n  }\n\n  public suspendUserTask = (state: FormState): void => {\n    this.customFormService?.suspendUserTask(state);\n  };\n\n  public abortUserTask = (): void => {\n    this.customFormService?.terminateProcessInstance();\n  };\n\n  public finishUserTask = (result: DataModels.FlowNodeInstances.UserTaskResult): void => {\n    this.customFormService?.finishUserTask(result);\n  };\n\n  public render(): JSX.Element | null {\n    if (!this.state.targetComponent) {\n      return null;\n    }\n\n    const componentInstance = React.createElement(this.state.targetComponent, {\n      userTask: this.state.userTask,\n      suspendState: this.state.suspendState,\n      suspendUserTask: this.suspendUserTask,\n      abortUserTask: this.abortUserTask,\n      finishUserTask: this.finishUserTask,\n    } as CustomFormProps);\n\n    return componentInstance;\n  }\n\n}\n","import React from 'react';\n\nimport { StartDialogProps } from '../DialogRenderer';\n\nexport class ZahlenratenStartDialog extends React.Component<StartDialogProps> {\n\n  private userName: React.RefObject<HTMLInputElement>;\n  private lowestNumber: React.RefObject<HTMLInputElement>;\n  private highestNumber: React.RefObject<HTMLInputElement>;\n\n\n  constructor(props: StartDialogProps) {\n    super(props);\n\n    this.userName = React.createRef();\n    this.lowestNumber = React.createRef();\n    this.highestNumber = React.createRef();\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <p>Willkommen zu Zahlenraten! Errate die richtige Zahl</p>\n        <label>Wie lautet dein Name? </label>\n        <br />\n        <input type='text' ref={this.userName} />\n        <br />\n        <br />\n        <label> Gib den Zahlenbereich an:</label>\n        <br />\n        <br />\n        <label>lowest Number</label>\n        <br />\n        <input type='number' ref={this.lowestNumber} />\n        <br />\n        <label>highest Number</label>\n        <br />\n        <input type='number' ref={this.highestNumber} />\n        <br />\n        <br />\n        <br />\n        <button onClick={() => this._handleOnClick()}>Zahlenraten starten</button>\n      </div>\n    );\n  }\n\n  private _handleOnClick(): void {\n    this.props.startProcess('Zahlenraten', { userName: this.userName.current?.value, lowestNumber: this.lowestNumber.current?.value, highestNumber: this.highestNumber.current?.value });\n  }\n}\n","import React from 'react';\nimport { withTranslation, WithTranslation } from 'react-i18next';\n\nimport { IIdentity } from '@atlas-engine/atlas_engine_client';\nimport { StartDialogDisplayedCallback, StartDialogService } from '@atlas-engine-contrib/atlas-ui_sdk';\n\nimport { Config } from '../config';\nimport { ZahlenratenStartDialog } from '../ZahlenratenStartDialog/ZahlenratenStartdialog';\n\n\nexport type DialogComponentDict = {\n  [id: string]: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type StartDialogProps = {\n  language: string,\n  identity: IIdentity;\n  startDialogConfiguration: StartDialogConfiguration;\n  closeStartDialog: () => void;\n  openStartDialog: (startDialogId: string) => void;\n  startProcess: (processModelId: string, payload?: unknown, startEventId?: string) => void;\n  config: Config | undefined;\n};\n\nexport type StartDialogRendererProps = {\n  components?: StartDialogComponentDict;\n  stammdatenDialogs?: DialogComponentDict;\n  config?: Config;\n}\n\nexport type StartDialogComponentDict = {\n  [startDialogId: string]: React.ComponentClass<StartDialogProps> | React.FunctionComponent<StartDialogProps>;\n}\n\nexport type StartDialogRendererState = {\n  targetComponent: React.ComponentClass<StartDialogProps> | React.FunctionComponent<StartDialogProps> | null;\n  targetStartDialogConfiguration: StartDialogConfiguration | null;\n  targetIdentity: IIdentity | null;\n  currentLanguage: string;\n}\n\nexport type StartDialogConfiguration = {\n  id: string;\n  title: string;\n  body: string;\n  url: string;\n  startButtonTitle: string;\n}\n\nclass StartDialogRenderer extends React.Component<StartDialogRendererProps & WithTranslation, StartDialogRendererState> {\n\n  private startDialogService: StartDialogService | null = null;\n\n  constructor(props: StartDialogRendererProps & WithTranslation) {\n    super(props);\n\n    this.state = {\n      targetComponent: null,\n      targetIdentity: null,\n      targetStartDialogConfiguration: null,\n      currentLanguage: 'de',\n    };\n  }\n\n  private components: StartDialogComponentDict = {\n    ZahlenratenStartDialog: ZahlenratenStartDialog,\n  };\n\n  public componentDidMount(): void {\n    this.startDialogService = new StartDialogService();\n    this.startDialogService.onStartDialogDisplayed(this.displayStartDialog as StartDialogDisplayedCallback);\n\n    this.components = {\n      ...this.components,\n      ...this.props.components,\n    };\n  }\n\n  public componentWillUnmount(): void {\n    if (!this.startDialogService) {\n      return;\n    }\n    this.startDialogService.destroy();\n  }\n\n  private displayStartDialog = (config: StartDialogConfiguration, identity: IIdentity): void => {\n    const component = this.components[config.id];\n    if (!component) {\n      throw new Error(`No component found for usertask ${JSON.stringify(config)}`);\n    }\n\n    this.setState({\n      targetComponent: component,\n      targetIdentity: identity,\n      targetStartDialogConfiguration: config,\n    });\n  };\n\n  public render(): JSX.Element | null {\n    if (!this.state.targetComponent || !this.state.targetStartDialogConfiguration || !this.state.targetIdentity) {\n      return null;\n    }\n\n    const props: StartDialogProps = {\n      language: 'de',\n      closeStartDialog: (): void => this.startDialogService?.closeStartDialog(),\n      openStartDialog: (startDialogId: string): void => this.startDialogService?.openStartDialog(startDialogId),\n      identity: this.state.targetIdentity,\n      startDialogConfiguration: this.state.targetStartDialogConfiguration,\n      startProcess: (processModelId, payload?, startEventId?): void => {\n        this.startDialogService?.startProcess(processModelId, payload, startEventId);\n      },\n      config: this.props.config,\n    };\n\n    const componentInstance = React.createElement(this.state.targetComponent, props);\n\n    return componentInstance;\n  }\n\n}\n\nexport default withTranslation()(StartDialogRenderer);\n","import { Component } from 'react';\r\n\r\nimport { CustomFormsRenderer, StartDialogRenderer } from './DialogRenderer';\r\nimport { default as config } from './config/config.json';\r\n\r\nimport './custom.css';\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render(): JSX.Element {\r\n    return (\r\n      <div style={{ height: '100%' }}>\r\n        <CustomFormsRenderer config={config} />\r\n        <StartDialogRenderer config={config} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport { createRoot } from 'react-dom/client';\r\n\r\nimport App from './App';\r\n\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container!);\r\n\r\nroot.render(<App />);\r\n"],"sourceRoot":""}